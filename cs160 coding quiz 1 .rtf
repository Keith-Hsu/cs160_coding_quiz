{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red22\green107\blue41;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c7451\c48627\c21176;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf0 \strokec4  Result \{\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 /*\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5      * Complete the 'simpleArraySum' function below.\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5      *\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5      * The function is expected to return an INTEGER.\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5      * The function accepts INTEGER_ARRAY ar as parameter.\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5      */\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf2 \strokec2 public\cf0 \strokec4  \cf2 \strokec2 static\cf0 \strokec4  \cf2 \strokec2 int\cf0 \strokec4  simpleArraySum(List<Integer> ar) \{\cb1 \
\cb3     \cf5 \strokec5 // Write your code here\cf0 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 int\cf0 \strokec4  b = \cf2 \strokec2 new\cf0 \strokec4  Integer(\cf5 \strokec5 0\cf0 \strokec4 );\cb1 \
\cb3          \cf2 \strokec2 int\cf0 \strokec4  a = \cf2 \strokec2 new\cf0 \strokec4  Integer(\cf5 \strokec5 0\cf0 \strokec4 );\cb1 \
\cb3          \cf2 \strokec2 for\cf0 \strokec4  (a = \cf5 \strokec5 0\cf0 \strokec4 ; a < ar.size(); a++) \{\cb1 \
\cb3              \cf2 \strokec2 int\cf0 \strokec4  c = ar.get(a);\cb1 \
\cb3              \cf2 \strokec2 if\cf0 \strokec4  (c == \cf5 \strokec5 0\cf0 \strokec4 ) \{\cb1 \
\cb3                 c += ar.get(a); \cb1 \
\cb3              \}\cb1 \
\cb3              \cf2 \strokec2 else\cf0 \strokec4  \cf2 \strokec2 if\cf0 \strokec4  (c > \cf5 \strokec5 0\cf0 \strokec4  & c < ar.size()) \{\cb1 \
\cb3                 c = ar.get(a) + ar.get(a - \cf5 \strokec5 1\cf0 \strokec4 );\cb1 \
\cb3              \}\cb1 \
\cb3              b += c;\cb1 \
\cb3          \}\cb1 \
\cb3          \cf2 \strokec2 return\cf0 \strokec4  b;\cb1 \
\cb3     \}\cb1 \
\
\cb3 \}\cb1 \
}